name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*', 'release-*' ]
  pull_request:
    branches: [ main ]

jobs:
  lint-build-test:
    name: Lint • Build • Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wp_tests
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
        ports:
          - 3306:3306

    strategy:
      fail-fast: false
      matrix:
        php: ['8.0', '8.1', '8.2', '8.3']
        node: ['20']

    env:
      # --- WordPress core test required constants (your defaults) ---
      WP_TESTS_DOMAIN: 10up.local
      WP_TESTS_EMAIL: wordpress@10up.local
      WP_TESTS_TITLE: "WordPress 10up Test Site"
      WP_PHP_BINARY: php

      # --- DB over TCP for CI ---
      WP_DB_NAME: wp_tests
      WP_DB_USER: root
      WP_DB_PASSWORD: root
      WP_DB_HOST: 127.0.0.1
      WP_DB_CHARSET: utf8
      WP_DB_COLLATE: ""
      WP_TABLE_PREFIX: wptests_

      # Where wp-phpunit is installed by Composer
      WP_PHPUNIT__DIR: vendor/wp-phpunit/wp-phpunit

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl, xml, dom, json, mysqli, pdo_mysql
          tools: composer:v2
          coverage: none

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: |
            ~/.composer/cache
            vendor
          key: composer-${{ runner.os }}-${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-${{ matrix.php }}-

      - name: Install Composer deps
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Wait for MySQL
        run: |
          for i in `seq 1 30`; do
            if mysqladmin ping -h 127.0.0.1 -proot --silent; then
              echo "MySQL is up"; break
            fi
            echo "Waiting for MySQL…"
            sleep 2
          done

      - name: Create test database (idempotent)
        run: |
          mysql -h 127.0.0.1 -uroot -proot -e "CREATE DATABASE IF NOT EXISTS \`${WP_DB_NAME}\` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"

      - name: Install NPM deps
        run: npm ci

      - name: Lint JS
        run: npm run lint:js || (echo "::warning title=ESLint::JS lint found issues"; exit 1)

      - name: Build assets (Webpack)
        run: npm run build

      - name: PHPCS
        run: composer phpcs

      - name: PHPUnit
        run: |
          # Show what bootstrap is doing (your bootstrap prints debug lines)
          vendor/bin/phpunit -c phpunit.xml.dist -v

      - name: Upload dist artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: assets-dist-${{ matrix.php }}-node${{ matrix.node }}
          path: |
            assets/dist/**
            !assets/dist/**/*.map

  package-zip:
    name: Build distributable ZIP
    needs: [lint-build-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps & build
        run: |
          npm ci
          npm run build

      - name: Create plugin zip
        run: |
          PLUGIN_SLUG="wp-ai-study-assistant"
          ZIP_NAME="${PLUGIN_SLUG}.zip"
          rm -f "${ZIP_NAME}"
          # Exclude dev & CI files from the distributable
          zip -r "${ZIP_NAME}" . \
            -x ".git/**" \
               ".github/**" \
               "node_modules/**" \
               "vendor/**" \
               "tests/**" \
               "composer.*" \
               "phpunit.xml*" \
               ".env*" \
               "*.map" \
               "*.DS_Store" \
               ".editorconfig" \
               ".eslint*" \
               ".prettier*" \
               ".browserslistrc" \
               ".stylelintrc*" \
               ".gitignore" \
               "package-lock.json"

          # Re-add production Composer deps only if you ship them (optional):
          # composer install --no-dev --prefer-dist --no-interaction
          # zip -ur "${ZIP_NAME}" vendor

      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v4
        with:
          name: wp-ai-study-assistant.zip
          path: wp-ai-study-assistant.zip

  release:
    name: Release on tag
    needs: [package-zip]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download ZIP
        uses: actions/download-artifact@v4
        with:
          name: wp-ai-study-assistant.zip
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: wp-ai-study-assistant.zip
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          